---
layout: post
title: 音频编解码-波形编码
---

语音编码从方法的角度可以分为三类：`波形编码`、`参数编码`、`混合编码`。波形编码是根据语音波形导出的相应数字编码形式，其目的是保持波形不变，接收端可以忠实地还原原始波形；参数编码又称为声码器技术，它通过对语音信号进行分析；混合编码是上述两种方法的结合。波形编码具有抗躁能力强，语音质量高等优点，而参数编码器可以获得超低的码率。本文将介绍语音编码的基础知识。

## 1. 语音编码系统
一般来说，语音信号系统的原理如下图所示。
<img src="/public/post/img/voice-process-flow.png" style="margin:auto auto;width: 80%;"/>

* 根据Naquist抽样定理，抽样频率需要高于信号中最高频率的两倍，否则会出现混叠失真。因此模拟信号在抽样前需要进行抗混叠滤波（低通滤波），以控制信号的最高频率。
* 因为语音的最大频率一般在3400Hz左右，因此语音信号的采样频率通常选择8000Hz。
* 抽样后的数据为离散时间信号，空间上离散，但是幅度连续，其取值范围可以是整个实数范围。因此需要量化，使用较少的计算机字长来表示所有数据。量化分为均匀量化和非均匀量化。
* 编码主要有三种编码方式：`波形编码`、`参数编码`、`混合编码`。

PCM编码。

## 2. 均匀量化与非均匀量化
前面说到，量化有均匀量化和非均匀量化。

除了非均匀量化，还可以通过自适应量化来提供信噪比。


## 3. 差分脉冲编码DPCM
因为语音信号相邻数据之间存在很大的相关性，因此可以考虑对相邻数据的差值来编码，这种方法被称为差分脉冲编码(difference PCM, DPCM)。

### 3.1 一个简单的DPCM
比较简单的方法是直接存储前一次的采样值，然后用本次采样值和前一次采样值计算差值，经过量化后编码。
<img src="/public/post/img/DPCM-codec.png" style="margin:auto auto;width: 70%;"/>
其中$$d_n$$表示差分信号，$$c_n$$表示经过量化编码后的信号，相比$$d_n$$有一个量化和编码误差$$e_n$$。

$$
    d_n = x_n - x_{n-1} \qquad (1)\\
    c_n = d_n + e_n = x_n - x_{n-1} + e_n \qquad (2)\\
$$

对于解码端，其输入为编码，解码输出为$$\bar x_n$$，有

$$
    \bar x_n = \bar x_{n-1} + c_n \qquad (3)
$$

对于公式(2)和公式(3)作z变换：

$$
    C(z) = X(z)(1-z^{-1}) + E(z) \qquad (4) \\
    \bar X(z) = z^{-1}\bar X(z) + C(z) \qquad (5)
$$

通过(4)(5)可知：

$$
    \bar X(z) = X(z) + \frac{E(z)}{1-z^{-1}} \qquad (6)
$$

明显，这个系统的误差会随着迭代累积（注意公式最后一项）。


### 3.2 DPCM的改进:使用前一次解码输出采样值代替采样
这里，我们用解码器前一次解码后的采样值$$\widetilde x(n)$$代替$$x(n-1)$$(这里$$\widetilde x(n)$$的下标写成n-1可能更容易理解)，注意下图中编码端存在一个解码器！

<img src="/public/post/img/DPCM-true-codec.png" style="margin:auto auto;width: 70%;"/>

$$\widetilde x(n)$$表示前一次解码的采样值，$$\widetilde x(n) = \bar x(n-1) + e'(n)$$，明显这个系统中的量化噪声可以抵消。因为$$\bar x(n-1) = \bar x(n-2) + c(n-1)$$，于是：

$$
    \widetilde x(n) = \widetilde x(n-1) + c(n-1) \qquad (7)
$$

对比下前面的图没有，只有这个差分的地方发生了变化。z变换得到：

$$
    \widetilde X(z) = \frac{C(z)z^{-1}}{1-z^{-1}} \qquad (8) \\
    C(z) = X(z) - \widetilde X(z) + E(z)  \qquad (9)
$$

将(9)带人(8)得：

$$
    \widetilde X(z) = \frac{C(z)}{1-z^{-1}} = X(z) + E(z) \qquad (10)
$$

对比公式(6)和公式(10)，发现这里面没有了量化误差的累积，$$\bar x(n) - x(n) = e(n)$$，即当前编码结果和输入的误差只为本次的的误差$$e(n)$$，而前面的却是$$\sum {e(n)}$$！


### 3.3 更普遍的DPCM
我觉得DPCM最核心之处在于差分信号的选择，这个被差分的信号$$\widetilde x(n)$$前面我们选择了前一个信号$$x(n-1)$$和前一个信号的解码采样值。实际上，语音信号的相关性不仅仅提前在前一个信号，因此可以考虑利用过去的采样值的线性组合来预测推断当前的采样值。$$\widetilde x(n)$$实际上可以认为根据过去值对当前采样值的一个估计，我们编码的是估计误差！误差越小，编码码率越低！还记得最佳预测器：线性预测编码器LPC吗？因此我们把$$\widetilde x(n)$$定义为LPC的输出：

<img src="/public/post/img/DPCM-general.png" style="margin:auto auto;width: 70%;"/>

其中$$P(z)$$为p阶的线性预测多项式:

$$
    P(z) = \sum_{i=1}^{p}{az^{-i}} \qquad (11)
$$

如果p=1，就得到了前面最简单的DPCM。


## 4. ADPCM
前面的DPCM模型虽然应够好了，但是我们还可以优化它。考虑到语音信号的不平稳性，可以采用自适应调整量化系数和线性预测系数。这种自适应量化和高阶自适应预测方法被称为自适应差分脉冲编码调制(Adaptive DPCM,ADPCM)。

<img src="/public/post/img/ADPCM.png" style="margin:auto auto;width: 60%;"/>

编码器的输出不仅仅包括编码输出，还有预测器系数和量化间隔。具体的自适应方法和量化调整，还没有搞懂。

